<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>net7.0-maccatalyst15.4</TargetFrameworks>
        <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net6.0-windows10.0.19041.0</TargetFrameworks>
        <!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
        <!-- <TargetFrameworks>$(TargetFrameworks);net6.0-tizen</TargetFrameworks> -->
        <OutputType>Exe</OutputType>
        <RootNamespace>Lljxww.ApiCaller.Client</RootNamespace>
        <UseMaui>true</UseMaui>
        <SingleProject>true</SingleProject>
        <ImplicitUsings>enable</ImplicitUsings>

        <!-- Display name -->
        <ApplicationTitle>Lljxww.ApiCaller.Client</ApplicationTitle>

        <!-- App Identifier -->
        <ApplicationId>com.companyname.lljxww.apicaller.client</ApplicationId>
        <ApplicationIdGuid>9887DBDF-DD7F-4315-8426-DFF9D2A412DB</ApplicationIdGuid>

        <!-- Versions -->
        <ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
        <ApplicationVersion>1</ApplicationVersion>

        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">14.0</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
      <WarningLevel>4</WarningLevel>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net7.0-ios16.0|AnyCPU'">
      <CreatePackage>false</CreatePackage>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net7.0-maccatalyst15.4|AnyCPU'">
      <CreatePackage>false</CreatePackage>
      <CodesignKey>Mac Developer</CodesignKey>
      <PackageSigningKey>3rd Party Mac Developer Installer</PackageSigningKey>
      <EnableCodeSigning>False</EnableCodeSigning>
    </PropertyGroup>
    <ItemGroup>
        <!-- App Icon -->
        <MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

        <!-- Splash Screen -->
        <MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

        <!-- Images -->
        <MauiImage Include="Resources\Images\*" />
        <MauiFont Include="Resources\Fonts\*" />

        <!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
        <MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
    </ItemGroup>

    <ItemGroup>
      <MauiXaml Update="UI\ManageAuthorizeTypePage.xaml">
        <SubType></SubType>
      </MauiXaml>
      <MauiXaml Update="Views\AllApiCallerConfigPage.xaml">
        <SubType></SubType>
      </MauiXaml>
      <MauiXaml Update="Views\ApiCallerConfigPage.xaml">
        <SubType></SubType>
      </MauiXaml>
      <MauiXaml Update="Contents\AuthorizeTypeContent.xaml">
        <SubType></SubType>
      </MauiXaml>
    </ItemGroup>
    <ItemGroup>
      <ProjectReference Include="..\Lljxww.ApiCaller\Lljxww.ApiCaller.csproj" />
    </ItemGroup>
    <ItemGroup>
      <None Remove="Models\" />
      <None Remove="Util\" />
      <None Remove="Contents\" />
    </ItemGroup>
    <ItemGroup>
      <Folder Include="Contents" />
      <Folder Include="Models\" />
      <Folder Include="Util\" />
      <Folder Include="Contents\" />
    </ItemGroup>
</Project>
